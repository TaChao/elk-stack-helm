{{- if .Values.manifests.deployment_ingest }}
{{- $serviceAccountName := "elasticsearch-ingest"}}

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: es-ingest
  labels:
    component: elasticsearch
    role: ingest
spec:
  serviceName: {{ $serviceAccountName }}
  replicas: {{ .Values.pod.replicas.ingest }}
  template:
    metadata:
      labels:
        component: elasticsearch
        role: ingest
    spec:
      initContainers:
      - name: init-sysctl
        image: {{ .Values.image.tag.init }}
        command:
        - sysctl
        - -w
        - vm.max_map_count={{ .Values.conf.init.max_map_count }}
        securityContext:
          privileged: true
      containers:
      - name: es-ingest
        image: {{ .Values.image.tag.elasticsearch }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_NAME
          value: {{ .Values.conf.cluster.name }}
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "true"
        - name: NODE_DATA
          value: "false"
        - name: HTTP_ENABLE
          value: "true"
        - name: ES_JAVA_OPTS
          value: {{ .Values.pod.resources.ingest | include "es_java_opts" | quote }}
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
{{ tuple . .Values.pod.resources.ingest | include "kubernetes_resources" | indent 8 }}
        ports:
        - containerPort: {{ tuple "elasticsearch" "internal" "client" . | include "endpoint_port_lookup" }}
          name: http
        - containerPort: {{ tuple "elasticsearch" "internal" "discovery" . | include "endpoint_port_lookup" }}
          name: transport
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 20
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: http
          initialDelaySeconds: 20
          timeoutSeconds: 5
        volumeMounts:
        - name: storage
          mountPath: /data
      volumes:
          - emptyDir:
              medium: ""
            name: "storage"
{{ end }}